plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
}

group 'ca.jahed.rtpoet'
version '1.0-SNAPSHOT'

def ghProps = new Properties()
file("github.properties").withInputStream { ghProps.load(it) }

repositories {
    mavenCentral()

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kjahed/rtpoet")
        credentials {
            username = ghProps.getProperty("gh.user") ?: System.getenv("GH_USER")
            password = ghProps.getProperty("gh.token") ?: System.getenv("GH_TOKEN")
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    compile 'ca.jahed.rtpoet:rtpoet:1.0-SNAPSHOT'
    compile 'ca.jahed.rtpoet:rtpoet-papyrusrt:1.0-SNAPSHOT'
    compile 'ca.jahed.rtpoet:rtpoet-visualizer:1.0-SNAPSHOT'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

task(runJava, dependsOn: 'classes', type: JavaExec) {
    main = 'JavaExample'
    classpath = sourceSets.main.runtimeClasspath
}

task(runKotline, dependsOn: 'classes', type: JavaExec) {
    main = 'KotlinExampleKt'
    classpath = sourceSets.main.runtimeClasspath
}